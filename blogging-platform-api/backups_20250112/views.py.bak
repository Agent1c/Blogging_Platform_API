from django.shortcuts import render, redirect
from django.contrib.auth import login, authenticate, logout
from django.contrib.auth.forms import UserCreationForm
from django.http import HttpResponse
from django.contrib.auth.forms import AuthenticationForm
from blog.forms import UserRegistrationForm
from django.contrib.auth.decorators import login_required
    
def register(request):
    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        if form.is_valid():
            form.save()
            # return redirect('login')
            return redirect('login')
    else:
        form = UserCreationForm()
    return render(request, 'users/register.html', {'form': form})

# def login_view(request):
#     if request.method == 'POST':
#         username = request.POST['username']
#         password = request.POST['password']
#         user = authenticate(request, username=username, password=password)
#         if user is not None:
#             login(request, user)
#             return redirect('profile')  # Redirect to a home page or dashboard
#         else:
#             return HttpResponse('Invalid login')
#     return render(request, 'users/login.html')

@login_required  # Ensure only logged-in users can access the profile page
def profile_view(request):
     return render(request, 'users/profile.html')  # Render the profile template

def login_view(request):
    if request.method == 'POST':
        username = request.POST['username']
        password = request.POST['password']
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return redirect('profile')  # Redirect to the profile page
        else:
            return HttpResponse('Invalid login')
    return render(request, 'users/login.html')

# def logout_view(request):
#     logout(request)
#     return redirect('login')

# Create your views here.
# def register(request):
#     if request.method == "POST": 
#         form = UserCreationForm(request.POST) 
#         if form.is_valid(): 
#             login(request, form.save())
#             return redirect("posts:list")
#     else:
#         form = UserCreationForm()
#     return render(request, "users/register.html", { "form": form })

# def register(request):
#     if request.method == 'POST':
#         form = UserRegistrationForm(request.POST)
#         if form.is_valid():
#             form.save()
#             return redirect('posts:post_list')  # Redirect to the post list using the correct namespace
#     else:
#         form = UserRegistrationForm()
#     return render(request, 'users/register.html', {'form': form})

# def login_view(request): 
#     if request.method == "POST": 
#         form = AuthenticationForm(data=request.POST)
#         if form.is_valid(): 
#             login(request, form.get_user())
#             if 'next' in request.POST:
#                 return redirect(request.POST.get('next'))
#             else:
#                 return redirect("posts:list")
#     else: 
#         form = AuthenticationForm()
#     return render(request, "users/login.html", { "form": form })

def logout_view(request):
    if request.method == "POST": 
        logout(request) 
        return redirect("posts:list")